{
  "_args": [
    [
      {
        "raw": "count-files",
        "scope": null,
        "escapedName": "count-files",
        "name": "count-files",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "E:\\Projects\\fastrack-api"
    ]
  ],
  "_from": "count-files@latest",
  "_id": "count-files@2.6.2",
  "_inCache": true,
  "_location": "/count-files",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/count-files-2.6.2.tgz_1493416439180_0.5974201932549477"
  },
  "_npmUser": {
    "name": "jhand",
    "email": "joe@hand.email"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "count-files",
    "scope": null,
    "escapedName": "count-files",
    "name": "count-files",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "http://registry.npmjs.org/count-files/-/count-files-2.6.2.tgz",
  "_shasum": "5c8116197ef569527bd7b4bd5aa2c033b90953d3",
  "_shrinkwrap": null,
  "_spec": "count-files",
  "_where": "E:\\Projects\\fastrack-api",
  "author": {
    "name": "Joe Hand",
    "email": "joe@joeahand.com",
    "url": "http://joeahand.com/"
  },
  "bin": {
    "count-files": "cli.js"
  },
  "bugs": {
    "url": "https://github.com/joehand/count-files/issues"
  },
  "dependencies": {
    "neat-log": "^1.0.0",
    "prettier-bytes": "^1.0.3"
  },
  "description": "count files in a directory recursively",
  "devDependencies": {
    "anymatch": "^1.3.0",
    "folder-walker": "^3.0.0",
    "hyperdrive": "^8.0.0",
    "nanobench": "^1.0.3",
    "random-access-memory": "^2.3.0",
    "standard": "^8.6.0",
    "stream-each": "^1.2.0",
    "tap-spec": "^4.1.1",
    "tape": "^4.6.3"
  },
  "directories": {},
  "dist": {
    "shasum": "5c8116197ef569527bd7b4bd5aa2c033b90953d3",
    "tarball": "https://registry.npmjs.org/count-files/-/count-files-2.6.2.tgz"
  },
  "gitHead": "7ec19c6bbd96acc43c1dc2b36ebc18c301f7ef38",
  "homepage": "https://github.com/joehand/count-files#readme",
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jhand",
      "email": "joe@hand.email"
    }
  ],
  "name": "count-files",
  "optionalDependencies": {},
  "readme": "# Count Files\n\n[![Travis](https://img.shields.io/travis/joehand/count-files/master.svg?style=flat-square)](https://travis-ci.org/joehand/count-files) [![npm](https://img.shields.io/npm/v/count-files.svg?style=flat-square)](https://npmjs.org/package/count-files)\n\nCount files, directories, and bytes in a directory recursively. \n\nIgnore files in the count.\n\n## Usage\n\nIn javascript, use it like so:\n\n```javascript\nvar countFiles = require('count-files')\n\nvar stats = countFiles(dir, function (err, results) {\n  console.log('done counting')\n  console.log(results) // { files: 10, dirs: 2, bytes: 234 }\n})\n\nsetInterval(function () {\n  console.log('current count', stats) // { files: 4, dirs: 1, bytes: 34 }\n}, 500)\n```\n\n`count-files` also has a very simple command line tool, use `npm install -g count-files` to install.\n\n```\n‚ùØ count-files ./\nCounting files and directories in...\n/joe/node_modules/count-files\n\nResults:\n Files:  13\n Dirs:   4\n Size:   10 KB\n```\n\n## API\n\n### var stats = countFiles(src, [opts], cb) { }\n\n`src` can be a directory or a single file path. You can also pass a custom fs, e.g. [hyperdrive](https://github.com/mafintosh/hyperdrive) and path with: `{fs: customFs, name: dir}` (see tests for examples).\n\nCallback returns the completed `stats`: `{files, dirs, bytes}`.\n\nOptions include:\n\n```js\nopts = {\n  ignore: function (file) {\n    return match(['**/*.js'], file) // return true to ignore file\n  }\n  dereference: false // dereference any symlinks\n}\n```\n\nWe find [anymatch](https://github.com/es128/anymatch) nice for ignoring files!\n\nThat's all folks!\n\n## Development\n\n* Run tests! `npm test`\n* Run performance thingy! `npm run perf`\n* Yay!\n\nSome basic performance testing in `tests/perf.js` and alternate implementations in `lib/`. I think I chose the fastest but didn't test all situations!\n\n## License\n\nISC\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/joehand/count-files.git"
  },
  "scripts": {
    "perf": "node tests/perf.js",
    "test": "standard && tape tests/test.js | tap-spec"
  },
  "version": "2.6.2"
}
