{
  "_args": [
    [
      {
        "raw": "electron-spawn@^4.1.0",
        "scope": null,
        "escapedName": "electron-spawn",
        "name": "electron-spawn",
        "rawSpec": "^4.1.0",
        "spec": ">=4.1.0 <5.0.0",
        "type": "range"
      },
      "E:\\Projects\\fastrack-api\\node_modules\\pdf-to-png"
    ]
  ],
  "_from": "electron-spawn@>=4.1.0 <5.0.0",
  "_id": "electron-spawn@4.1.1",
  "_inCache": true,
  "_location": "/electron-spawn",
  "_nodeVersion": "5.5.0",
  "_npmOperationalInternal": {
    "host": "packages-5-east.internal.npmjs.com",
    "tmp": "tmp/electron-spawn-4.1.1.tgz_1456534069762_0.6320743723772466"
  },
  "_npmUser": {
    "name": "substack",
    "email": "substack@gmail.com"
  },
  "_npmVersion": "3.7.1",
  "_phantomChildren": {
    "debug": "2.6.9",
    "extract-zip": "1.6.6",
    "home-path": "1.0.5",
    "minimist": "1.2.0",
    "mkdirp": "0.5.1",
    "mv": "2.1.1",
    "nugget": "1.6.2",
    "path-exists": "1.0.0",
    "rc": "1.2.2"
  },
  "_requested": {
    "raw": "electron-spawn@^4.1.0",
    "scope": null,
    "escapedName": "electron-spawn",
    "name": "electron-spawn",
    "rawSpec": "^4.1.0",
    "spec": ">=4.1.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pdf-to-png"
  ],
  "_resolved": "http://registry.npmjs.org/electron-spawn/-/electron-spawn-4.1.1.tgz",
  "_shasum": "87559aa72cf9ec260814ccfa757ccc7eabdf22e3",
  "_shrinkwrap": null,
  "_spec": "electron-spawn@^4.1.0",
  "_where": "E:\\Projects\\fastrack-api\\node_modules\\pdf-to-png",
  "author": {
    "name": "max ogden"
  },
  "bin": {
    "electron-spawn": "cli.js"
  },
  "bugs": {
    "url": "https://github.com/maxogden/electron-spawn/issues"
  },
  "dependencies": {
    "electron-prebuilt": "^0.30.0",
    "npm-execspawn": "^1.2.0"
  },
  "description": "easy way to run code inside of a headless electron window from the CLI",
  "devDependencies": {
    "standard": "^4.5.4",
    "tape": "^4.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "87559aa72cf9ec260814ccfa757ccc7eabdf22e3",
    "tarball": "https://registry.npmjs.org/electron-spawn/-/electron-spawn-4.1.1.tgz"
  },
  "gitHead": "4c193133c85cfb71cf94c6ce579b6f79258de98d",
  "homepage": "https://github.com/maxogden/electron-spawn#readme",
  "keywords": [
    "electron",
    "atom",
    "atom-shell",
    "headless"
  ],
  "license": "BSD-2-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    },
    {
      "name": "maxogden",
      "email": "max@maxogden.com"
    },
    {
      "name": "shama",
      "email": "kyle@dontkry.com"
    },
    {
      "name": "substack",
      "email": "substack@gmail.com"
    }
  ],
  "name": "electron-spawn",
  "optionalDependencies": {},
  "readme": "# electron-spawn\n\nrun code easily inside of headless electron (chromium) windows from the command line\n\n## usage\n\n```\n$ npm i electron-prebuilt -g\n$ npm i electron-spawn -g\n$ echo \"console.log('hello')\" > foo.js\n$ electron-spawn foo.js\n```\n\nyou can also export a function that takes arguments to get all the arguments passed in to your program:\n\n```\n$ echo \"module.exports = function (args) { console.log(args) }\" > foo.js\n$ electron-spawn foo.js bar baz\n# outputs ['bar', 'baz']\n```\n\nor you can use `process.argv` like an ordinary node program:\n\n```\n$ echo 'console.log(process.argv.slice(2))' > hello.js\n$ electron-spawn hello.js beep boop\n# outputs: ['beep', 'boop']\n```\n\n`process.stdin` works too:\n\n``` js\nprocess.stdin.on('data', function (buf) {\n  console.log('buf=', buf)\n})\n```\n\n```\n$ echo beep boop | electron-spawn stdin.js\nbuf= <Buffer 62 65 65 70 20 62 6f 6f 70 0a>\n```\n\n## api\n\n### `var spawn = require('electron-spawn')`\n\nreturn a function that spawn electron\n\n### `var electron = spawn(scriptname[, params..., execOptions])`\n\nreturns a child process running electron with the given `scriptname`\n\n`params` are a list of arguments passed to the process\n\n`execOptions` is an object literal to set options on how the process gets spawned\n\n```js\nvar spawn = require('electron-spawn')\nvar electron = spawn('foo.js', 'bar', 'baz', {\n  detached: true\n})\nelectron.stderr.on('data', function (data) {\n  console.error(data.toString())\n})\nelectron.stdout.on('data', function (data) {\n  console.log(data.toString())\n})\n```\n\nlimitations:\n\n- cannot automatically yet exit your program like how node does when you have no more activity on the event loop  \n  But in your script you can call `require('remote').require('app').quit()` to quit when it's done:\n```js\nmodule.exports = function (args) {\n  var img = new Image()\n  img.onload = function () {\n    require('remote').require('app').quit()\n  }\n  img.src = 'http://example.com/cat.gif'\n}\n```\n\nor you can call `process.exit()` like an ordinary node program.\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/maxogden/electron-spawn.git"
  },
  "scripts": {
    "test": "standard && node test.js"
  },
  "standard": {
    "ignore": [
      "cli.js"
    ]
  },
  "version": "4.1.1"
}
