{
  "_args": [
    [
      {
        "raw": "status-logger@^3.1.1",
        "scope": null,
        "escapedName": "status-logger",
        "name": "status-logger",
        "rawSpec": "^3.1.1",
        "spec": ">=3.1.1 <4.0.0",
        "type": "range"
      },
      "E:\\Projects\\fastrack-api\\node_modules\\neat-log"
    ]
  ],
  "_from": "status-logger@>=3.1.1 <4.0.0",
  "_id": "status-logger@3.1.1",
  "_inCache": true,
  "_location": "/status-logger",
  "_nodeVersion": "8.3.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/status-logger-3.1.1.tgz_1506463273873_0.5500526991672814"
  },
  "_npmUser": {
    "name": "jhand",
    "email": "joe@hand.email"
  },
  "_npmVersion": "5.4.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "status-logger@^3.1.1",
    "scope": null,
    "escapedName": "status-logger",
    "name": "status-logger",
    "rawSpec": "^3.1.1",
    "spec": ">=3.1.1 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/neat-log"
  ],
  "_resolved": "http://registry.npmjs.org/status-logger/-/status-logger-3.1.1.tgz",
  "_shasum": "3a6b3774ddc5fb224b62c23f44299c3c3ed19344",
  "_shrinkwrap": null,
  "_spec": "status-logger@^3.1.1",
  "_where": "E:\\Projects\\fastrack-api\\node_modules\\neat-log",
  "author": {
    "name": "Joe Hand",
    "email": "joe@joeahand.com",
    "url": "http://joeahand.com/"
  },
  "bugs": {
    "url": "https://github.com/joehand/status-logger/issues"
  },
  "dependencies": {
    "ansi-diff-stream": "^1.2.0",
    "lodash.flattendeep": "^4.4.0",
    "wrap-ansi": "^3.0.1"
  },
  "description": "print updating progress to console and stdout",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-dNYazf7T9aD9XMvvP/ZZTL8nzhS1piUfFq7HVDOHFdO2LBnPMqdkS5kaoXjK7gvH/0mT6ZcafuDTSSd7DIVYAA==",
    "shasum": "3a6b3774ddc5fb224b62c23f44299c3c3ed19344",
    "tarball": "https://registry.npmjs.org/status-logger/-/status-logger-3.1.1.tgz"
  },
  "gitHead": "ec6562cc315506d7ef4c9a1941cec8d7fdbaf872",
  "homepage": "https://github.com/joehand/status-logger#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jhand",
      "email": "joe@hand.email"
    }
  ],
  "name": "status-logger",
  "optionalDependencies": {},
  "readme": "# Status Logger\n\nManage complex CLI output with arrays and automatically print any changes to stdout via [ansi-diff-stream](https://github.com/mafintosh/ansi-diff-stream).\n\n**WARNING: Awesomeness elsewhere.** `status-logger` was nice but it wasn't enough, it still *felt* like node but I wanted frontend javascript fun. Introducing... 🥁  ... [neat-log](https://github.com/joehand/neat-log). **neat-log** is much neater and I'd definitely recommend using that. It uses `status-logger` under the hood.\n\n## Example\n\nThe example here will initially print:\n\n```\nStatus Logger Example:\nstarting...\n```\n\nThen once it gets started, it will print the time every second:\n\n```\nStatus Logger Example:\nTime = 10 seconds\n```\n\n```js\nvar output = ['Status Logger Example:', 'starting...']\nvar log = statusLogger(output)\nsetInterval(function () {\n  log.print()\n}, 100)\nlog.print()\nstart()\n\nfunction start () {\n  var sec = 0\n  setInterval(function () {\n    sec++\n    output[1] = `Time = ${sec} seconds`\n  }, 1000)\n}\n```\n\nRun `node basic-example.js` or `node example.js` to see full examples. You can find more complex usage in these modules:\n\n* ~[Dat CLI](https://github.com/datproject/dat)~ Using `neat-log` now (built on this)\n* [bkr](https://github.com/beakerbrowser/bkr/)\n\n## Installation\n\n```\nnpm install status-logger\n```\n\n## API\n\n### `var log = statusLogger(messages, opts)`\n\n`messages` is an array with of lines to print. They will be printed in order with a newline spacer between each. Message arrays are flattened so they can be any mix of nested arrays and strings.\n\n### Options\n\n* `quiet`: do not print anything\n* `debug`: print everything to console.log or console.error\n\n### `log.print()`\n\nPrint messages from all groups.\n\n### `var output = log.clear(messages)`\n\nClear all output and create a empty output array (or with new `messages`).\n\n### `log.diff`\n\n`ansi-diff-stream` instance\n\n### `log.messages`\n\nStored reference to the original messages array.\n\n## License\n\nMIT\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/joehand/status-logger.git"
  },
  "scripts": {
    "test": "standard"
  },
  "version": "3.1.1"
}
