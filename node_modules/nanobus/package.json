{
  "_args": [
    [
      {
        "raw": "nanobus@^3.0.0",
        "scope": null,
        "escapedName": "nanobus",
        "name": "nanobus",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "E:\\Projects\\fastrack-api\\node_modules\\neat-log"
    ]
  ],
  "_from": "nanobus@>=3.0.0 <4.0.0",
  "_id": "nanobus@3.3.0",
  "_inCache": true,
  "_location": "/nanobus",
  "_nodeVersion": "6.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/nanobus-3.3.0.tgz_1495299594765_0.06570699671283364"
  },
  "_npmUser": {
    "name": "yoshuawuyts",
    "email": "i@yoshuawuyts.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "nanobus@^3.0.0",
    "scope": null,
    "escapedName": "nanobus",
    "name": "nanobus",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/neat-log"
  ],
  "_resolved": "http://registry.npmjs.org/nanobus/-/nanobus-3.3.0.tgz",
  "_shasum": "bce5d5d435a5362c7dad7f9e90cd21959589be86",
  "_shrinkwrap": null,
  "_spec": "nanobus@^3.0.0",
  "_where": "E:\\Projects\\fastrack-api\\node_modules\\neat-log",
  "bugs": {
    "url": "https://github.com/yoshuawuyts/nanobus/issues"
  },
  "dependencies": {
    "nanotiming": "^1.0.1"
  },
  "description": "Tiny message bus",
  "devDependencies": {
    "dependency-check": "^2.8.0",
    "nanobench": "^2.1.0",
    "nyc": "^10.1.2",
    "standard": "^8.6.0",
    "tape": "^4.6.3"
  },
  "directories": {},
  "dist": {
    "shasum": "bce5d5d435a5362c7dad7f9e90cd21959589be86",
    "tarball": "https://registry.npmjs.org/nanobus/-/nanobus-3.3.0.tgz"
  },
  "gitHead": "b45ed88377927b094043e955a76230b78db2b56d",
  "homepage": "https://github.com/yoshuawuyts/nanobus#readme",
  "keywords": [
    "event",
    "emit"
  ],
  "maintainers": [
    {
      "name": "jbucaran",
      "email": "jbucaran@gmail.com"
    },
    {
      "name": "yoshuawuyts",
      "email": "i@yoshuawuyts.com"
    }
  ],
  "name": "nanobus",
  "optionalDependencies": {},
  "readme": "# nanobus [![stability][0]][1]\n[![npm version][2]][3] [![build status][4]][5] [![test coverage][6]][7]\n[![downloads][8]][9] [![js-standard-style][10]][11]\n\nTiny message bus.\n\n## Usage\n```js\nvar nanobus = require('nanobus')\nvar bus = nanobus()\n\nbus.on('foo', function (color) {\n  console.log('color is', color)\n})\n\nbus.emit('foo', 'blue')\n```\n\n## FAQ\n### Why not use the Node API?\nWe had the requirement for a `*` event to catch all calls, and figured we could\nimprove the file size at the same time. This library is about 1/3rd the size of\nNode's version. And it was easy to build, so yeah good enough of an excuse hah.\n\n### How do I listen for replies?\nYou can do this by using the `.once()` listener and establishing a convention\naround naming schemas.\n\n```js\nbus.on('foo', function (color) {\n  console.log('foo called')\n  bus.emit('foo:res')\n})\n\nbus.once('foo:res', function () {\n  console.log('response received')\n})\nbus.emit('foo')\n```\n\n### When shouldn't I use this package?\nIf you're only writing code that runs inside Node and don't need a `'*'`\nlistener, consider using the built-in event emitter API instead.\n\n### Are the emitters asynchronous?\nNo. If you're interested in doing that, use something like\n[nanotick](https://github.com/yoshuawuyts/nanotick) to batch events and ensure\nthey run asynchronously.\n\n## API\n### `bus = nanobus([name])`\nCreate a new `nanobus` instance. Optionally takes a name that will be used for\ntracing in the browser using the `performance.mark` / `performance.measure`\nAPI.\n\n### `bus.emit(eventName, [data])`\nEmit an event. Arbitrary data can optionally be passed as an argument. `'*'`\nlisteners run after named listeners.\n\n### `bus.on(eventName, listener([data]))`\n### `bus.addListener(eventName, listener([data]))`\nListen to an event. If the event name is `'*'` the listener signature is\n`listener(eventName, [data])`.\n\n### `bus.prependListener(eventName, listener([data]))`\nListen to an event, but make sure it's pushed to the start of the listener\nqueue. If the event name is `'*'` the listener signature is\n`listener(eventName, [data])`.\n\n### `bus.once(eventName, listener([data]))`\nListen to an event, and clear it after it's been called once.  If the event\nname is `'*'` the listener signature is `listener(eventName, [data])`.\n\n### `bus.prependOnceListener(eventName, listener([data]))`\nListen to an event, and clear it after it's been called once.  If the event\nname is `'*'` the listener signature is `listener(eventName, [data])`.\n\n### `bus.removeListener(eventName, listener)`\nRemove a specific listener to an event.\n\n### `listeners = bus.listeners(eventName)`\nReturn all listeners for a given event\n\n### `bus.removeAllListeners([eventName])`\nRemove all listeners to an event. If no event name is passed, removes all\nlisteners on the message bus.\n\n## License\n[MIT](https://tldrlegal.com/license/mit-license)\n\n[0]: https://img.shields.io/badge/stability-experimental-orange.svg?style=flat-square\n[1]: https://nodejs.org/api/documentation.html#documentation_stability_index\n[2]: https://img.shields.io/npm/v/nanobus.svg?style=flat-square\n[3]: https://npmjs.org/package/nanobus\n[4]: https://img.shields.io/travis/yoshuawuyts/nanobus/master.svg?style=flat-square\n[5]: https://travis-ci.org/yoshuawuyts/nanobus\n[6]: https://img.shields.io/codecov/c/github/yoshuawuyts/nanobus/master.svg?style=flat-square\n[7]: https://codecov.io/github/yoshuawuyts/nanobus\n[8]: http://img.shields.io/npm/dm/nanobus.svg?style=flat-square\n[9]: https://npmjs.org/package/nanobus\n[10]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[11]: https://github.com/feross/standard\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yoshuawuyts/nanobus.git"
  },
  "scripts": {
    "bench": "node bench.js",
    "coverage": "nyc report --reporter=text-lcov > coverage.lcov",
    "deps": "dependency-check . && dependency-check . --extra --no-dev",
    "start": "node .",
    "test": "standard && npm run deps && nyc node test.js"
  },
  "version": "3.3.0"
}
